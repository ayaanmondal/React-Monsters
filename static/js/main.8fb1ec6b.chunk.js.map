{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","monster","map","SearchBox","placeholder","handlechange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,wBCGDA,EAAO,SAACC,GAAD,OAEjB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACvB,mCAAML,EAAMI,SAASE,QACrB,kCAAMN,EAAMI,SAASG,aCDhBC,EAAW,SAACR,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SACHD,EAAMS,QAAQC,KAAI,SAAAN,GAAQ,OAC3B,cAAC,EAAD,CAAwBA,SAAaA,GAA1BA,EAASC,UCLfM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAUF,MCgCAG,E,kDAlCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,QAAS,GACTS,YAAa,IALJ,E,qDASZ,WAAqB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,QAASc,S,oBAG5C,WAAS,IAAD,SAC0BE,KAAKR,MAA7BR,EADF,EACEA,QAASS,EADX,EACWA,YACXQ,EAAiBjB,EAAQkB,QAAO,SAAAvB,GAAQ,OAC5CA,EAASE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEnD,OACE,sBAAK3B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE3D,cAAC,EAAD,CAAUvB,QAASiB,W,GA5BTO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8fb1ec6b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.style.css';\n\n export const Card = (props) => (\n     \n    <div className=\"card-container\">\n        <img alt='monsters' src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}></img>\n        <h2> {props.monsters.name}</h2>\n        <p> { props.monsters.email }</p>\n    </div>\n )","import React from 'react';\nimport './card-list.style.css';\n\nimport { Card } from '../card/card.component';\n\n\n\nexport const CardList = (props) => {\n    return (<div className='card-list'>\n        {props.monster.map(monsters => (\n        <Card key={monsters.id} monsters = { monsters }/>\n        ))}\n    </div>)\n}","import React from 'react';\n\nimport './search-box.style.css';\n\n\nexport const SearchBox = ({ placeholder, handlechange }) => (\n    <input\n     className='search'\n     type=\"search\" \n     placeholder={ placeholder }\n     onChange={handlechange}\n    />\n);","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component'; \n\nclass App extends Component{\n  constructor(){\n    super();               // Super helps us with this by calling React.Component's constructor()\n\n    this.state = {\n      monster: [],\n      searchField: ''\n    };\n  }\n\n   componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monster: users }));\n\n   } \n  render(){\n    const { monster, searchField} = this.state;\n    const filterMonsters = monster.filter(monsters =>\n      monsters.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return(\n      <div className=\"App\">\n        <h1>Monsters Magic</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handlechange={e => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monster={filterMonsters}>\n        </CardList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}